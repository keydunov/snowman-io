define("ui/adapters/application",["ember-data","ui/config/environment","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"];s["default"]=a.RESTAdapter.extend({host:n.baseHost,namespace:"api"})}),define("ui/app",["ember","ember/resolver","ember/load-initializers","ui/config/environment","exports"],function(e,t,s,a,n){"use strict";var r=e["default"],i=t["default"],o=s["default"],u=a["default"];r.MODEL_FACTORY_INJECTIONS=!0;var h=r.Application.extend({modulePrefix:u.modulePrefix,podModulePrefix:u.podModulePrefix,Resolver:i});o(h,u.modulePrefix),n["default"]=h}),define("ui/controllers/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Controller.extend({version:function(){return s.$("meta[name=snowman-io-version]").attr("content")}.property()})}),define("ui/controllers/check",["ember","ui/config/environment","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"];s["default"]=a.Controller.extend({actions:{resolve:function(){var e=this;this.set("resolveInProgress",!0),a.$.ajax({url:String(n.baseHost)+"/api/checks/"+e.get("model").get("id")+"/resolve",type:"POST",data:JSON.stringify({})}).then(function(){e.get("model").reload().then(function(){e.set("resolveInProgress",!1)})})}}})}),define("ui/initializers/export-application-global",["ember","ui/config/environment","exports"],function(e,t,s){"use strict";function a(e,t){var s=n.String.classify(r.modulePrefix);r.exportApplicationGlobal&&(window[s]=t)}var n=e["default"],r=t["default"];s.initialize=a,s["default"]={name:"export-application-global",initialize:a}}),define("ui/mixins/live-pooling",["ember","ui/utils/pollster","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"];s["default"]=a.Mixin.create({actions:{didTransition:function(){this.set("pollster",n.create({onPoll:this.onPoll})),this.get("pollster").start(this)},willTransition:function(){this.get("pollster").stop(),this.set("pollster",null)}}})}),define("ui/utils/pollster",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Object.extend({interval:function(){return 3e3}.property(),schedule:function(e,t){return s.run.later(this,function(){t.apply(e),this.set("timer",this.schedule(e,t))},this.get("interval"))},stop:function(){s.run.cancel(this.get("timer"))},start:function(e){this.set("timer",this.schedule(e,this.get("onPoll")))},onPoll:function(){throw"implement this"}})}),define("ui/models/check",["ember-data","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Model.extend({status:s.attr("string"),positive_count:s.attr("number"),fail_count:s.attr("number"),raw_history:s.attr("string"),history:function(){return JSON.parse(this.get("raw_history"))}.property("raw_history"),isFailed:function(){return"failed"===this.get("status")}.property("status")})}),define("ui/router",["ember","ui/config/environment","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"],r=a.Router.extend({location:n.locationType});r.map(function(){this.resource("checks",{path:"/"}),this.resource("check",{path:"/checks/:check_id"})}),s["default"]=r}),define("ui/routes/check",["ember","ui/mixins/live-pooling","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"];s["default"]=a.Route.extend(n,{model:function(e){return this.store.find("check",e.check_id)},onPoll:function(){this.controller.get("model").reload()}})}),define("ui/routes/checks",["ember","ui/mixins/live-pooling","exports"],function(e,t,s){"use strict";var a=e["default"],n=t["default"];s["default"]=a.Route.extend(n,{model:function(){return this.store.find("check")},onPoll:function(){this.refresh()}})}),define("ui/templates/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,a,n,r){this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var i,o="";return r.buffer.push('<div class="container">\n  <h2>\n    Welcome to SnowmanIO\n    <small><a href="/logout">logout</a></small>\n  </h2>\n  <p>Version: '),i=a._triageMustache.call(t,"version",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("</p>\n\n  "),i=a._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</div>\n"),o})}),define("ui/templates/check",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,a,n,r){function i(e,t){t.buffer.push("back")}function o(e,t){var s="";return t.buffer.push('\n  <p><a href="#" '),t.buffer.push(p(a["bind-attr"].call(e,{hash:{"class":":btn :btn-sm :btn-primary resolveInProgress:disabled"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(" "),t.buffer.push(p(a.action.call(e,"resolve",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Resolve</a></p>\n"),s}function u(e,t){var s,n="";return t.buffer.push("\n  <div><b>"),s=a._triageMustache.call(e,"entry.at",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</b>: "),s=a._triageMustache.call(e,"entry.reason",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</div>\n"),n}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var h,l,c,f="",p=this.escapeExpression,d=this,b=a.helperMissing;return r.buffer.push("<p>"),l=a["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,i,r),contexts:[t],types:["STRING"],data:r},h=l?l.call(t,"checks",c):b.call(t,"link-to","checks",c),(h||0===h)&&r.buffer.push(h),r.buffer.push("</p>\n<p><b>Key:</b> "),h=a._triageMustache.call(t,"model.id",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("</p>\n<p><b>Positive/Failed:</b> "),h=a._triageMustache.call(t,"model.positive_count",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("/"),h=a._triageMustache.call(t,"model.fail_count",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("</p>\n<p>\n  <b>Status:</b>\n  <span "),r.buffer.push(p(a["bind-attr"].call(t,{hash:{"class":":label model.isFailed:label-danger:label-success"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push(">"),h=a._triageMustache.call(t,"model.status",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("</span>\n</p>\n"),h=a["if"].call(t,"model.isFailed",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(3,o,r),contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("\n<h3>History</h3>\n"),h=a.each.call(t,"entry","in","model.history",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(5,u,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push("\n"),f})}),define("ui/templates/checks",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,a,n,r){function i(e,t){var s,n,r,i="";return t.buffer.push("\n    <tr "),t.buffer.push(l(a["bind-attr"].call(e,{hash:{"class":"check.isFailed:danger"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">\n      <td>"),n=a["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},s=n?n.call(e,"check","check",r):f.call(e,"link-to","check","check",r),(s||0===s)&&t.buffer.push(s),t.buffer.push("</td>\n      <td>"),s=a._triageMustache.call(e,"check.positive_count",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("/"),s=a._triageMustache.call(e,"check.fail_count",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</td>\n      <td>\n        <span "),t.buffer.push(l(a["bind-attr"].call(e,{hash:{"class":":label check.isFailed:label-danger:label-success"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">"),s=a._triageMustache.call(e,"check.status",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</span>\n      </td>\n      <td></td>\n    </tr>\n  "),i}function o(e,t){var s;s=a._triageMustache.call(e,"check.id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(s||0===s?s:"")}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var u,h="",l=this.escapeExpression,c=this,f=a.helperMissing;return r.buffer.push('<div class="table-responsive">\n<table class="table">\n  <tr>\n    <th>Key</th>\n    <th>Positive/Failed</th>\n    <th>Status</th>\n    <th>Action</th>\n  </tr>\n\n  '),u=a.each.call(t,"check","in","model",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,i,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n</table>\n</div>\n"),h})}),define("ui/config/environment",["ember"],function(e){var t="ui";try{var s=t+"/config/environment",a=e["default"].$('meta[name="'+s+'"]').attr("content"),n=JSON.parse(unescape(a));return{"default":n}}catch(r){throw new Error('Could not read config from meta tag with name "'+s+'".')}}),runningTests?require("ui/tests/test-helper"):require("ui/app")["default"].create({});